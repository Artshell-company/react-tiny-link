{"version":3,"file":"index.umd.js","sources":["../src/ReactTinyLinkTypes.ts","../src/utils.ts","../src/components/Card.ts","../src/components/Description.tsx","../src/rules/utils.ts","../src/rules/Video/ScrapVideo.ts","../src/rules/Audio/ScrapAudio.ts","../src/rules/Image/ScrapImage.ts","../src/rules/Youtube/ScrapYoutube.ts","../src/rules/Amazon/ScrapAmazon.ts","../src/rules/Default/ScrapDefault.ts","../src/rules/Instagram/ScrapInstagram.ts","../src/rules/BoardGameGeek/ScrapBoardGameGeek.ts","../src/rules/Twitter/ScrapTwitter.ts","../src/rules/index.ts","../src/components/CardMedia.tsx","../src/useScraper.tsx","../src/ReactTinyLink.tsx"],"sourcesContent":["export enum ReactTinyLinkType {\n  TYPE_AMAZON = 'TYPE_AMAZON',\n  TYPE_YOUTUBE = 'TYPE_YOUTUBE',\n  TYPE_AUDIO = 'TYPE_AUDIO',\n  TYPE_VIDEO = 'TYPE_VIDEO',\n  TYPE_IMAGE = 'TYPE_IMAGE',\n  TYPE_DEFAULT = 'TYPE_DEFAULT',\n  TYPE_INSTAGRAM = 'TYPE_INSTAGRAM',\n  TYPE_BOARDGAMEGEEK = 'TYPE_BOARDGAMEGEEK',\n  TYPE_TWITTER = 'TYPE_TWITTER',\n}\n\nexport type CardSizeType = 'small' | 'large'\n\nexport interface IReactTinyLinkProps {\n  cardSize?: CardSizeType\n  maxLine: number\n  minLine: number\n  url: string\n  requestHeaders?: Headers | string[][] | Record<string, string>\n  header?: string\n  onError?: (error: Error) => void\n  onSuccess?: (response: IReactTinyLinkData) => void\n  onClick?: (e, response?: IReactTinyLinkData) => void\n  description?: string\n  showGraphic?: boolean\n  autoPlay?: boolean\n  width?: string | number\n  noCache?: boolean\n  proxyUrl?: string\n  loadSecureUrl?: boolean\n  scraper?: (\n    url: string,\n    httpClient: any,\n    defaultMedia: any,\n  ) => Promise<{\n    title: any\n    description: any\n    url: any\n    video: any[]\n    image: any[]\n    type: ReactTinyLinkType\n  }>\n  defaultMedia?: string\n}\n\nexport interface IReactTinyLinkData {\n  description: string\n  image: string[]\n  title: string\n  type: ReactTinyLinkType\n  video: string[]\n  url: string\n}\n","import { css } from 'styled-components';\nimport { IReactTinyLinkData, ReactTinyLinkType } from './ReactTinyLinkTypes';\n\nconst REGEX_STRIP_WWW = /^www\\./;\nexport const media = {\n  mobile: (...args) => css`\n    @media (max-width: 48em) {\n      ${css(...args)};\n    }\n  `,\n  desktop: (...args) => css`\n    @media (max-width: 48em) {\n      ${css(...args)};\n    }\n  `,\n};\n\nexport const getHostname = href => {\n  const { hostname } = new URL(href);\n  return hostname.replace(REGEX_STRIP_WWW, '');\n};\n\nexport const isLarge = cardSize => cardSize === 'large';\n\nexport const isValidImageURL = src => {\n  if (typeof src !== 'string') return false;\n  return !!src.match(/\\w+\\.(a?png|gif|jpe?g|svg|webp)/gi)\n}\n\nexport const isValidVideoURL = src => {\n  if (typeof src !== 'string') return false;\n  return !!src.match(/\\w+\\.(mp4|ogg|webm)/gi);\n}\n\nexport const findFirstSecureUrl = (records, condition) => {\n  const result = records.find(record => condition(record) && record.startsWith('https://'));\n  return result ? result : '';\n}\n\n/**\n * @returns {IReactTinyLinkData} with default values.\n *\n * @param url url to fetch\n * @param defaultMedia media assigned to both the image and the video\n */\nexport function defaultData(url: string, defaultMedia: string[]): IReactTinyLinkData {\n    return {\n        title: url.substring(url.lastIndexOf('/') + 1),\n        description: url.substring(url.lastIndexOf('/') + 1),\n        image: defaultMedia,\n        url: url,\n        video: defaultMedia,\n        type: ReactTinyLinkType.TYPE_DEFAULT,\n    }\n}\n\n/** does nothing. Just here to have a constance reference */\nexport function noop() {\n    return\n}\n\n/**\n * Wraps a promise to make it cancelable.\n *\n * from https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n * defined by @istarkov at:\n * https://github.com/facebook/react/issues/5465#issuecomment-157888325\n */\nexport const makeCancelable = (promise) => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n","import styled, { css } from 'styled-components'\nimport { isLarge, media } from '../utils'\nimport { ReactTinyLinkType } from '../ReactTinyLinkTypes'\n\n// Media Style\nconst smallMediaStyle = css`\n  height: 127px;\n`\nconst largeMediaStyle = css`\n  height: ${({ isShownGraphic }) => (isShownGraphic ? '382px;' : 'auto')};\n`\n\n// Content Style\nconst largeContentStyle = css`\n  flex: 0 0 125px;\n`\n\nconst smallDescriptionStyle = css`\n  p {\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: ${({ maxLine }) => (maxLine ? maxLine : 2)};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  ${media.mobile`\n    > p {\n      \n  -webkit-line-clamp: ${({ minLine }) => (minLine ? minLine : 1)};\n \n    }\n  `};\n`\n\nconst largeDescriptionStyle = css`\n  p {\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: ${({ maxLine }) => (maxLine ? maxLine : 2)};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  ${media.mobile`\n    > p {\n      -webkit-line-clamp: ${({ minLine }) => (minLine ? minLine : 1)};\n    }\n  `};\n`\n// Styled Components for cards\nexport const Media = styled('div')`\n    display: block;\n    height: auto;\n    position: relative;\n    background: ${({ src, placeholderBg, type }) =>\n      src\n        ? `url(${src}) center center / ${\n            type === ReactTinyLinkType.TYPE_AUDIO ? `contain` : `cover`\n          } no-repeat rgb(225, 232, 237)`\n        : placeholderBg};\n    \n    flex: ${({ cardSize }) => (isLarge(cardSize) ? '1 1 0%;' : '0 0 125px;')}\n    overflow: hidden;\n    transition: flex-basis 0.25s ease-in-out 0s;\n`\nMedia.defaultProps = {\n  placeholderBg: `rgb(225, 232, 235)`,\n}\n\nexport const Video = styled('video')`\nwidth:100%;\ndisplay: block;\nheight: 100%;\n    position: relative;\n    flex: ${({ cardSize }) => (isLarge(cardSize) ? '1 1 0%;' : '0 0 125px;')}\n    overflow: hidden;\nobject-fit:cover\n`\n\nexport const ContentWrapper = styled('div')`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  flex: 1;\n  padding: 10px 15px;\n  min-width: 0;\n  box-sizing: border-box;\n  ${({ cardSize }) => isLarge(cardSize) && largeContentStyle};\n`\n\nexport const Header = styled('header')`\n  text-align: left;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0;\n  flex-grow: 1.2;\n\n  ${({ cardSize }) => (!isLarge(cardSize) ? smallDescriptionStyle : largeDescriptionStyle)};\n`\nexport const Content = styled('div')`\n  text-align: left;\n  font-size: 14px;\n  flex-grow: 1;\n  margin: auto 0;\n  line-height: 18px;\n\n  ${({ cardSize }) => (!isLarge(cardSize) ? smallDescriptionStyle : largeDescriptionStyle)};\n`\n\nexport const Footer = styled('footer')`\n  text-align: left;\n  font-size: 12px;\n  margin: 0;\n  flex-grow: 0;\n`\n\nexport const Card = styled('a')`\n  max-width: ${({ width }) => (width ? width : `100vw`)};\n  background-color: rgb(255, 255, 255);\n  color: rgb(24, 25, 25);\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  display: flex;\n  opacity: 1;\n  position: relative;\n  transition-duration: 0.35s;\n  transition-timing-function: ease-in-out;\n  flex-direction: ${({ cardSize }) => (isLarge(cardSize) ? 'column' : 'row')}\n    ${({ cardSize }) => (isLarge(cardSize) ? largeMediaStyle : smallMediaStyle)};\n\n  transition-property: background, border-color, height;\n  border-width: 1px;\n  border-style: solid;\n  border-color: rgb(225, 232, 237);\n  overflow: hidden;\n  text-decoration: none;\n  -webkit-tap-highlight-color: rgb(245, 248, 250);\n  cursor: pointer;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: rgb(245, 248, 250);\n  }\n`\nCard.defaultProps = {\n  rel: 'noopener noreferrer',\n  target: '_blank',\n}\n","import * as React from 'react';\n\nimport styled, { css, keyframes } from 'styled-components';\n\n// Key Frames\nconst shimmerKeyFrame = keyframes`\n   0%{\n        background-position: 100% 80%;\n    }\n    100%{\n        background-position: 0 80%;\n    }\n`\nconst loadingStyle = css`\n  animation-duration: 1.4s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-name: ${shimmerKeyFrame};\n  background: darkgray;\n  background: linear-gradient(90deg, #cacaca 25%, #e4e4e4 37%, #f7f6f6 63%);\n  background-size: 800px 100%;\n  color: transparent;\n  -webkit-line-clamp: 1;\n  border-radius: 10px;\n  width: ${({ loadingWidth }) => (loadingWidth ? `${100 / loadingWidth}%` : `100%`)};\n`\n\nconst UnstyledDescription = ({ loading, loadingWidth, maxLine, minLine, className, ...props}) => {\n    return (\n        <p {...props} className={className}>{...props.children}</p>\n    );\n}\n\nexport const Description = styled(UnstyledDescription)<{ loading: boolean }>`\n  &&& {\n    text-align: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    color: inherit;\n    margin: 0;\n    ${({ loading }) => loading && loadingStyle}\n  }\n`\n\nexport default Description;\n","const REGEX_AMAZON_URL = /https?:\\/\\/(.*amazon\\..*\\/.*|.*amzn\\..*\\/.*|.*a\\.co\\/.*)/i\nexport const isAmazonUrl = url => REGEX_AMAZON_URL.test(url)\n\nconst REGEX_YOUTUBE = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/gi\nexport const isYoutubeUrl = url => !!url.toString().match(REGEX_YOUTUBE)\n\nconst REGEX_INSTAGRAM = /(https?:\\/\\/www\\.)?instagram\\.com(\\/p\\/\\w+\\/?)/gi\nexport const isInstagramUrl = url => !!url.toString().match(REGEX_INSTAGRAM)\n\nconst REGEX_BOARDGAMEGEEK = /(https?:\\/\\/www\\.)?boardgamegeek\\.com(\\/boardgame\\/\\w+\\/\\w+\\/?)/gi\nexport const isBoardGameGeekUrl = url => !!url.toString().match(REGEX_BOARDGAMEGEEK)\n\nconst REGEX_TWITTER = /(https?:\\/\\/(www)?\\.?)?twitter\\.com\\/.+/gi\nexport const isTwitterUrl = url => !!url.toString().match(REGEX_TWITTER)\n\nexport const isEmpty = (value: any) => {\n  let isEmptyObject = function(a) {\n    if (typeof a.length === 'undefined') {\n      // it's an Object, not an Array\n      let hasNonempty = Object.keys(a).some(function nonEmpty(element) {\n        return !isEmpty(a[element])\n      })\n      return hasNonempty ? false : isEmptyObject(Object.keys(a))\n    }\n\n    return !a.some(function nonEmpty(element) {\n      // check if array is really not empty as JS thinks\n      return !isEmpty(element) // at least one element should be non-empty\n    })\n  }\n  return (\n    value == false ||\n    typeof value === 'undefined' ||\n    value == null ||\n    (typeof value === 'object' && isEmptyObject(value))\n  )\n}\n\nexport const isAudio = (mimeType: string) => mimeType.startsWith('audio/')\nexport const isVideo = (mimeType: string) => mimeType.startsWith('video/')\nexport const isImage = (mimeType: string) => mimeType.startsWith('image/')\n\n// Basic Scrap Helpers\nexport const getTitleOfDoc = (htmlDoc: any) => {\n  const titleEl = htmlDoc.querySelector('title')\n  if (!titleEl) {\n    return null\n  }\n  return titleEl.innerText\n}\n\nexport const getAttrOfDocElement = (htmlDoc: any, query: string, attr: string) => {\n  const el = htmlDoc.querySelector(query)\n  if (!el) {\n    return null\n  }\n  return el.getAttribute(attr)\n}\n\nexport const getYoutTubeVideoId = (url: string) => {\n  const parsed = url.match(/^.*((m\\.)?youtu\\.be\\/|vi?\\/|u\\/\\w\\/|embed\\/|\\?vi?=|\\&vi?=)([^#\\&\\?]*).*/)\n\n  if (parsed && parsed[3]) {\n    return parsed[3]\n  } else {\n    return null\n  }\n}\n\nexport const getInstagramVideo = (htmlDoc: any) => {\n  const videoLinkMatcher = /(?:\"video_url\":\")(.*?)(?:\")/g\n  if (videoLinkMatcher.test(htmlDoc)) {\n    const videoMatches = videoLinkMatcher.exec(htmlDoc)\n    if (videoMatches && videoMatches.length !== 0) {\n      return videoMatches[0].split('\":\"')[1].replace('\"', '')\n    }\n  }\n  return null\n}\n\nexport const fixRelativeUrls = (baseUrl: string, itemUrl: string) => {\n  const normalizedUrl = itemUrl.toLocaleLowerCase()\n  if (normalizedUrl.startsWith('http://') || normalizedUrl.startsWith('https://')) {\n    return itemUrl\n  }\n  return new URL(itemUrl, baseUrl).href\n}\n\nexport const getBaseUrl = (htmlDoc: any, url: string) => getAttrOfDocElement(htmlDoc, 'base', 'href') || new URL(url).origin\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => {\n  return {\n    title: url.substring(url.lastIndexOf('/') + 1),\n    description: url,\n    image: [],\n    video: [url, defaultMedia].filter(i => !isEmpty(i)),\n    url: url,\n    type: ReactTinyLinkType.TYPE_VIDEO,\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => {\n  return {\n    title: url.substring(url.lastIndexOf('/') + 1),\n    description: url.substring(url.lastIndexOf('/') + 1),\n    url: url,\n    image: [defaultMedia].filter(i => !isEmpty(i)),\n    video: [],\n    type: ReactTinyLinkType.TYPE_AUDIO,\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => ({\n  title: url.substring(url.lastIndexOf('/') + 1),\n  description: url.substring(url.lastIndexOf('/') + 1),\n  url: url,\n  video: [],\n  image: [url, defaultMedia].filter(i => !isEmpty(i)),\n  type: ReactTinyLinkType.TYPE_IMAGE,\n})\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getYoutTubeVideoId } from '../utils'\n\nconst titleRegex = /\"title\":\"(.+?)\"/g\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  const id = getYoutTubeVideoId(url)\n  const image = [\n    `https://img.youtube.com/vi/${id}/0.jpg`,\n    `https://img.youtube.com/vi/${id}/1.jpg`,\n    `https://img.youtube.com/vi/${id}/2.jpg`,\n    `https://img.youtube.com/vi/${id}/3.jpg`,\n  ]\n  try {\n    const { title } = JSON.parse(\n      `{${\n      htmlDoc\n        .querySelector('html')\n        .innerHTML.toString()\n        .match(titleRegex)[0]\n      }}`,\n    )\n    return {\n      title: title,\n      url: url,\n      description: url,\n      type: ReactTinyLinkType.TYPE_YOUTUBE,\n      video: [],\n      image: image.filter(i => !isEmpty(i)),\n    }\n  } catch (error) {\n    return {\n      title: htmlDoc.querySelector('title').innerText,\n      url: url,\n      description: url,\n      type: ReactTinyLinkType.TYPE_YOUTUBE,\n      video: [],\n      image: !defaultMedia ? image.filter(i => !isEmpty(i)) : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    }\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, '.a-dynamic-image', 'data-old-hires'),\n    getAttrOfDocElement(htmlDoc, '.a-dynamic-image', 'src'),\n  ]\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    type: ReactTinyLinkType.TYPE_AMAZON, // MIME Type\n    publisher: ['Amazon'],\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:logo\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[itemprop=\"logo\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'img[itemprop=\"logo\"]', 'src'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image']\", 'content'),\n    getAttrOfDocElement(htmlDoc, 'img[class*=\"logo\" i]', 'src'),\n    getAttrOfDocElement(htmlDoc, 'img[src*=\"logo\" i]', 'src'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image:secure_url\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image:url\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image:src\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[itemprop=\"image\"]', 'content'),\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_DEFAULT, // MIME Type\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, data, defaultMedia) => {\n  const scrappedData = JSON.parse(data)\n\n  return {\n    title: scrappedData.graphql.shortcode_media.accessibility_caption,\n    content: url,\n    url: url,\n    description: scrappedData.title,\n    video: null,\n    image: !defaultMedia\n      ? [scrappedData.graphql.shortcode_media.display_url]\n      : [scrappedData.graphql.shortcode_media.display_url, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_IMAGE, // MIME Type\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getAttrOfDocElement(htmlDoc, 'base', 'href')\n  if (!baseUrl) {\n    baseUrl = url\n  }\n  const image = [\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image:src\"]', 'content')\n  ]\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    type: ReactTinyLinkType.TYPE_BOARDGAMEGEEK, // MIME Type\n    publisher: ['BoardGameGeek'],\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, data, htmlDoc, defaultMedia) => {\n  const scrappedData = JSON.parse(data)\n  const htmlElement = document.createElement(`html`)\n  htmlElement.innerHTML = scrappedData.html\n\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image']\", 'content'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image:user_generated']\", 'content'),\n    'https://help.twitter.com/content/dam/help-twitter/twitter-logo.png',\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  const video = [\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:video:url']\", 'content'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:video:secure_url']\", 'content'),\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  return {\n    title: htmlElement.querySelector('p').textContent,\n    description: scrappedData.author_name,\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    video: video,\n    image: !defaultMedia ? image : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_TWITTER, // MIME Type\n    publisher: ['Twitter'],\n  }\n}\n","import {\n  isVideo,\n  isAudio,\n  isImage,\n  isYoutubeUrl,\n  isAmazonUrl,\n  isEmpty,\n  isInstagramUrl,\n  isBoardGameGeekUrl,\n  isTwitterUrl,\n} from './utils'\nimport ScrapVideo from './Video/ScrapVideo'\nimport ScrapAudio from './Audio/ScrapAudio'\nimport ScrapImage from './Image/ScrapImage'\nimport ScrapYoutube from './Youtube/ScrapYoutube'\nimport ScrapAmazon from './Amazon/ScrapAmazon'\nimport ScrapDefault from './Default/ScrapDefault'\nimport ScrapInstagram from './Instagram/ScrapInstagram'\nimport ScrapBoardGameGeek from './BoardGameGeek/ScrapBoardGameGeek'\nimport ScrapTwitter from './Twitter/ScrapTwitter'\n\nexport default async (url: string, httpClient, defaultMedia: string[]) => {\n  if (!isEmpty(url)) {\n    const response = await httpClient\n    const mimeType = response.headers.get('content-type')\n    const data = await response.text()\n    const htmlDoc = new DOMParser().parseFromString(data, 'text/html')\n    if (isVideo(mimeType)) {\n      return await ScrapVideo(url, defaultMedia)\n    } else if (isAudio(mimeType)) {\n      return await ScrapAudio(url, defaultMedia)\n    } else if (isImage(mimeType)) {\n      return await ScrapImage(url, defaultMedia)\n    } else if (isInstagramUrl(url)) {\n      return await ScrapInstagram(url, data, defaultMedia)\n    } else if (isYoutubeUrl(url)) {\n      return await ScrapYoutube(url, htmlDoc, defaultMedia)\n    } else if (isAmazonUrl(url)) {\n      return await ScrapAmazon(url, htmlDoc, defaultMedia)\n    } else if (isBoardGameGeekUrl(url)) {\n      return await ScrapBoardGameGeek(url, htmlDoc, defaultMedia)\n    } else if (isTwitterUrl(url)) {\n      return await ScrapTwitter(url, data, htmlDoc, defaultMedia)\n    } else {\n      return await ScrapDefault(url, htmlDoc, defaultMedia)\n    }\n  }\n}\n","import * as React from 'react'\nimport { Media, Video } from './Card'\nimport { ReactTinyLinkType } from '../ReactTinyLinkTypes'\nimport { isValidImageURL, isValidVideoURL, findFirstSecureUrl } from '../utils'\n\nconst ImageWrapper = ({ data, secureImageUrl, loadSecureUrl }) => {\n  if (loadSecureUrl && !secureImageUrl) return null\n  const imageUrl = data.image && ((loadSecureUrl && secureImageUrl) ? secureImageUrl : data.image[0])\n\n  if (!imageUrl) {\n    return null\n  }\n\n  return <img\n    style={{ display: `none` }}\n    src={imageUrl}\n    onError={(e: any) => {\n      e.target.parentElement.style.filter = ''\n    }}\n    onLoad={(e: any) => {\n      e.target.parentElement.style.filter = ''\n    }}\n  />\n\n}\n\nconst VideoWrapper = ({ data, secureVideoUrl, loadSecureUrl, autoPlay }) => {\n  if (loadSecureUrl && !secureVideoUrl) return null\n  const videoUrl = data.video && ((loadSecureUrl && secureVideoUrl) ? secureVideoUrl : data.video[0])\n\n  if (!videoUrl) {\n    return null\n  }\n\n  return <Video\n    muted\n    onCanPlayThrough={e => {\n      let video = e.target\n      setTimeout(() => {\n        video.pause()\n      }, 1000)\n    }}\n    autoPlay={autoPlay}\n    controls\n  >\n    <source src={`${videoUrl}#t=0.1`}></source>\n  </Video>\n\n}\n\n\nconst CardMedia = ({ data, cardSize, autoPlay, loadSecureUrl }) => {\n  const secureImageUrl = data.image && findFirstSecureUrl(data.image, isValidImageURL)\n  const secureVideoUrl = data.video && findFirstSecureUrl(data.video, isValidVideoURL)\n\n  return (\n    <>\n      {data.type !== ReactTinyLinkType.TYPE_VIDEO && (\n        <Media\n          className=\"react_tinylink_card_media\"\n          cardSize={cardSize}\n          src={data.image && (secureImageUrl ? secureImageUrl : data.image[0])}\n          type={data.type}\n          style={{ WebkitFilter: 'blur(10px)', filter: 'blur(10px)' }}\n        >\n          <ImageWrapper data={data} secureImageUrl={secureImageUrl} loadSecureUrl={loadSecureUrl} />\n        </Media>\n      )}\n      {data.type && data.type === ReactTinyLinkType.TYPE_VIDEO && (\n        <Media\n          className=\"react_tinylink_card_media\"\n          cardSize={cardSize}\n          src={data.video && (secureVideoUrl ? secureVideoUrl : data.video[0])}\n          type={data.type}\n        >\n          <VideoWrapper data={data} secureVideoUrl={secureVideoUrl} autoPlay={autoPlay} loadSecureUrl={loadSecureUrl} />\n        </Media>\n      )}\n    </>\n  )\n}\n\nexport default CardMedia\n","import { useState, useEffect } from 'react'\n\n// Helpers\nimport ScraperWraper from './rules'\nimport { makeCancelable } from './utils'\n\n// Types\nimport { IReactTinyLinkData } from './ReactTinyLinkTypes'\nimport { isInstagramUrl, isTwitterUrl } from './rules/utils'\n\n/** current state of the fetch */\nexport interface IState<T, E> {\n  /**\n   * The respones to the request. Undefined if the request not done or returned\n   * an error.\n   */\n  response: T | undefined\n\n  /** Loading status. `true` if loading, `false` otherwise. */\n  loading: boolean\n\n  /**\n   * Error status. Undefined if the request returned a valid response or is\n   * loading.\n   */\n  error: E | undefined\n}\n\n/** array composed of:\n * 1. The respones to the request. Undefined if the request not done or returned\n *    an error.\n * 2. The loading status. `true` if loading, `false` otherwise.\n * 3. Ther error status. Undefined if the request returned a valid response or is\n *    loading.\n */\nexport type ResponseState<T, E> = [T | undefined, boolean, E | undefined]\n\nexport type UseScraperConfig = {\n  url: string\n  proxyUrl?: string\n  requestHeaders?: Headers | string[][] | Record<string, string>\n  /** default medias passed to the `ScraperWraper` */\n  defaultMedias?: string[]\n  /**\n   * Permits to pass a default value. This will be the response's value\n   * during the loading and in case of error.\n   */\n  defaultValue?: IReactTinyLinkData\n  /** disables cache */\n  noCache?: boolean\n  // Hooks for the caller\n  /** Called when the fetch failed with the reason of the failure */\n  onError?: (error: Error) => void\n  /** Called when the fetch succeeded with the resulting data */\n  onSuccess?: (response: IReactTinyLinkData) => void\n}\n\ntype CacheMap = Map<string, IReactTinyLinkData>\n\nconst cache: CacheMap = new Map()\n\nexport function useScraper({\n  url,\n  proxyUrl = 'https://cors-anywhere.herokuapp.com',\n  defaultMedias = [],\n  defaultValue,\n  noCache,\n  onError,\n  onSuccess,\n  requestHeaders,\n}: UseScraperConfig): ResponseState<IReactTinyLinkData, Error> {\n  // Alias to IState\n  type State = IState<IReactTinyLinkData, Error>\n\n  // Setup the state\n  const [state, setState] = useState<State>({\n    response: defaultValue,\n    loading: true, // Avoid a re-render to set to true\n    error: undefined,\n  })\n\n  /** Does the fetch on mount. Ensure the cleanup in case of premature unmounting */\n  useEffect(() => {\n    // Permit to control if should set the state. Avoiding a memory leak\n    let isMounted: boolean = true\n\n    // Wraps the `ScraperWraper` to manage the hook's state\n    const doFetch = async (): Promise<IReactTinyLinkData> => {\n      const finalStateUpdate: Partial<State> = { loading: false, error: undefined }\n      let headers = requestHeaders\n\n      try {\n        // actual request to preview the link\n        let urlToCall = proxyUrl ? `${proxyUrl}/${url}` : url\n        if (isInstagramUrl(url)) {\n          const modifiedInstaUrl = `${url}?__a=1&max_id=endcursor`\n          urlToCall = modifiedInstaUrl\n        } else if (isTwitterUrl(url)) {\n          const modifiedInstaUrl = `https://publish.twitter.com/oembed?url=${url}`\n          urlToCall = proxyUrl ? `${proxyUrl}/${modifiedInstaUrl}` : modifiedInstaUrl\n        }\n\n        let data\n        if (!noCache && cache.has(urlToCall)) {\n          data = cache.get(urlToCall)\n        } else {\n          const client = fetch(urlToCall, { headers })\n          data = await ScraperWraper(url, client, defaultMedias)\n          cache.set(urlToCall, data)\n        }\n        finalStateUpdate.response = data\n\n        onSuccess && isMounted && onSuccess(data)\n        return data\n      } catch (err) {\n        finalStateUpdate.error = err\n        onError && isMounted && onError(err)\n\n        return err\n      } finally {\n        isMounted && setState(old => ({ ...old, ...finalStateUpdate }))\n      }\n    }\n\n    // Makes the request and wraps it so we can cancel it if needed\n    const cancelable = makeCancelable(doFetch());\n    // avoid throw errors on promise cancel, other errors should be catched inside doFetch function\n    cancelable.promise.catch(() => {});\n\n    // Returns a cleanup function which permits to avoid potential\n    // memory leaks and unnecessary network when the component is\n    // unmount.\n    return () => {\n      isMounted = false // Avoid all the state management\n      cancelable.cancel() // Cancel the request\n    }\n  }, [url, proxyUrl, noCache]) // Put no dependecy, does the fetch only once on mount\n\n  return [state.response, state.loading, state.error]\n}\n\n/** headers passed to the fetch request */\n","import * as React from 'react'\nimport { Card, ContentWrapper, Header, Content, Footer } from './components/Card'\nimport Description from './components/Description'\nimport { getHostname, noop, defaultData } from './utils'\nimport { IReactTinyLinkProps } from './ReactTinyLinkTypes'\nimport ScraperWraper from './rules'\nimport CardMedia from './components/CardMedia'\nimport { useScraper } from './useScraper'\n\nexport const useScrapper = useScraper\nexport const ScrapperWraper = ScraperWraper\nexport const ReactTinyLink: React.FC<IReactTinyLinkProps> = ({\n  cardSize = 'small',\n  maxLine = 2,\n  minLine = 1,\n  header = null,\n  description = null,\n  url = '',\n  width = '640px',\n  noCache = false,\n  proxyUrl = 'https://cors-anywhere.herokuapp.com',\n  showGraphic = true,\n  autoPlay = false,\n  defaultMedia = '',\n  loadSecureUrl = false,\n  onError = noop, // Permit to keep a constant reference\n  onSuccess = noop,\n  onClick = null,\n  requestHeaders = { 'x-requested-with': '' },\n}: IReactTinyLinkProps) => {\n  const defaultMedias = defaultMedia ? [defaultMedia] : []\n  const [data, loading] = useScraper({\n    url,\n    proxyUrl,\n    requestHeaders,\n    defaultMedias,\n    defaultValue: defaultData(url, defaultMedias),\n    noCache,\n    onError,\n    onSuccess,\n  })\n\n  return (\n    <Card\n      onClick={e => {\n        if (!onClick) return;\n        e.preventDefault()\n        onClick(e, data)\n      }}\n      className=\"react_tinylink_card\"\n      cardSize={cardSize}\n      href={url}\n      width={width}\n      isShownGraphic={showGraphic}\n    >\n      {showGraphic && (\n        <CardMedia autoPlay={autoPlay} cardSize={cardSize} data={data} loadSecureUrl={loadSecureUrl} />\n      )}\n      <ContentWrapper className=\"react_tinylink_card_content_wrapper\" cardSize={cardSize}>\n        <Header maxLine={maxLine} minLine={minLine} className=\"react_tinylink_card_content_header\">\n          <Description\n            loading={loading}\n            loadingWidth={2}\n            maxLine={maxLine}\n            minLine={minLine}\n            className=\"react_tinylink_card_content_header_description\"\n          >\n            {header ? header : data.title ? data.title : url}\n          </Description>\n        </Header>\n        <Content maxLine={maxLine} minLine={minLine} className=\"react_tinylink_card_content\" cardSize={cardSize}>\n          <Description loading={loading} loadingWidth={1} className=\"react_tinylink_card_content_description\">\n            {description ? description : data.description ? data.description : url}\n          </Description>\n        </Content>\n        <Footer className=\"react_tinylink_footer\">\n          <Description loading={loading} loadingWidth={1} className=\"react_tinylink_card_footer_description\">\n            {getHostname(url)}\n          </Description>\n        </Footer>\n      </ContentWrapper>\n    </Card>\n  )\n}\n"],"names":["css","styled","keyframes","React","useEffect"],"mappings":"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"}