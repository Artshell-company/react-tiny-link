{"version":3,"file":"index.js","sources":["../src/ReactTinyLinkTypes.ts","../src/utils.ts","../src/components/Card.ts","../src/components/Description.tsx","../src/rules/utils.ts","../src/rules/Video/ScrapVideo.ts","../src/rules/Audio/ScrapAudio.ts","../src/rules/Image/ScrapImage.ts","../src/rules/Youtube/ScrapYoutube.ts","../src/rules/Amazon/ScrapAmazon.ts","../src/rules/Default/ScrapDefault.ts","../src/rules/Instagram/ScrapInstagram.ts","../src/rules/BoardGameGeek/ScrapBoardGameGeek.ts","../src/rules/Twitter/ScrapTwitter.ts","../src/rules/index.ts","../src/components/CardMedia.tsx","../src/useScraper.tsx","../src/ReactTinyLink.tsx"],"sourcesContent":["export enum ReactTinyLinkType {\n  TYPE_AMAZON = 'TYPE_AMAZON',\n  TYPE_YOUTUBE = 'TYPE_YOUTUBE',\n  TYPE_AUDIO = 'TYPE_AUDIO',\n  TYPE_VIDEO = 'TYPE_VIDEO',\n  TYPE_IMAGE = 'TYPE_IMAGE',\n  TYPE_DEFAULT = 'TYPE_DEFAULT',\n  TYPE_INSTAGRAM = 'TYPE_INSTAGRAM',\n  TYPE_BOARDGAMEGEEK = 'TYPE_BOARDGAMEGEEK',\n  TYPE_TWITTER = 'TYPE_TWITTER',\n}\n\nexport type CardSizeType = 'small' | 'large'\n\nexport interface IReactTinyLinkProps {\n  cardSize?: CardSizeType\n  maxLine: number\n  minLine: number\n  url: string\n  requestHeaders?: Headers | string[][] | Record<string, string>\n  header?: string\n  onError?: (error: Error) => void\n  onSuccess?: (response: IReactTinyLinkData) => void\n  onClick?: (e, response?: IReactTinyLinkData) => void\n  description?: string\n  showGraphic?: boolean\n  autoPlay?: boolean\n  width?: string | number\n  noCache?: boolean\n  proxyUrl?: string\n  loadSecureUrl?: boolean\n  scraper?: (\n    url: string,\n    httpClient: any,\n    defaultMedia: any,\n  ) => Promise<{\n    title: any\n    description: any\n    url: any\n    video: any[]\n    image: any[]\n    type: ReactTinyLinkType\n  }>\n  defaultMedia?: string\n}\n\nexport interface IReactTinyLinkData {\n  description: string\n  image: string[]\n  title: string\n  type: ReactTinyLinkType\n  video: string[]\n  url: string\n}\n","import { css } from 'styled-components';\nimport { IReactTinyLinkData, ReactTinyLinkType } from './ReactTinyLinkTypes';\n\nconst REGEX_STRIP_WWW = /^www\\./;\nexport const media = {\n  mobile: (...args) => css`\n    @media (max-width: 48em) {\n      ${css(...args)};\n    }\n  `,\n  desktop: (...args) => css`\n    @media (max-width: 48em) {\n      ${css(...args)};\n    }\n  `,\n};\n\nexport const getHostname = href => {\n  const { hostname } = new URL(href);\n  return hostname.replace(REGEX_STRIP_WWW, '');\n};\n\nexport const isLarge = cardSize => cardSize === 'large';\n\nexport const isValidImageURL = src => {\n  if (typeof src !== 'string') return false;\n  return !!src.match(/\\w+\\.(a?png|gif|jpe?g|svg|webp)/gi)\n}\n\nexport const isValidVideoURL = src => {\n  if (typeof src !== 'string') return false;\n  return !!src.match(/\\w+\\.(mp4|ogg|webm)/gi);\n}\n\nexport const findFirstSecureUrl = (records, condition) => {\n  const result = records.find(record => condition(record) && record.startsWith('https://'));\n  return result ? result : '';\n}\n\n/**\n * @returns {IReactTinyLinkData} with default values.\n *\n * @param url url to fetch\n * @param defaultMedia media assigned to both the image and the video\n */\nexport function defaultData(url: string, defaultMedia: string[]): IReactTinyLinkData {\n    return {\n        title: url.substring(url.lastIndexOf('/') + 1),\n        description: url.substring(url.lastIndexOf('/') + 1),\n        image: defaultMedia,\n        url: url,\n        video: defaultMedia,\n        type: ReactTinyLinkType.TYPE_DEFAULT,\n    }\n}\n\n/** does nothing. Just here to have a constance reference */\nexport function noop() {\n    return\n}\n\n/**\n * Wraps a promise to make it cancelable.\n *\n * from https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n * defined by @istarkov at:\n * https://github.com/facebook/react/issues/5465#issuecomment-157888325\n */\nexport const makeCancelable = (promise) => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n","import styled, { css } from 'styled-components'\nimport { isLarge, media } from '../utils'\nimport { ReactTinyLinkType } from '../ReactTinyLinkTypes'\n\n// Media Style\nconst smallMediaStyle = css`\n  height: 127px;\n`\nconst largeMediaStyle = css`\n  height: ${({ isShownGraphic }) => (isShownGraphic ? '382px;' : 'auto')};\n`\n\n// Content Style\nconst largeContentStyle = css`\n  flex: 0 0 125px;\n`\n\nconst smallDescriptionStyle = css`\n  p {\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: ${({ maxLine }) => (maxLine ? maxLine : 2)};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  ${media.mobile`\n    > p {\n      \n  -webkit-line-clamp: ${({ minLine }) => (minLine ? minLine : 1)};\n \n    }\n  `};\n`\n\nconst largeDescriptionStyle = css`\n  p {\n    -webkit-box-orient: vertical;\n    display: -webkit-box;\n    -webkit-line-clamp: ${({ maxLine }) => (maxLine ? maxLine : 2)};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: normal;\n  }\n  ${media.mobile`\n    > p {\n      -webkit-line-clamp: ${({ minLine }) => (minLine ? minLine : 1)};\n    }\n  `};\n`\n// Styled Components for cards\nexport const Media = styled('div')`\n    display: block;\n    height: auto;\n    position: relative;\n    background: ${({ src, placeholderBg, type }) =>\n      src\n        ? `url(${src}) center center / ${\n            type === ReactTinyLinkType.TYPE_AUDIO ? `contain` : `cover`\n          } no-repeat rgb(225, 232, 237)`\n        : placeholderBg};\n    \n    flex: ${({ cardSize }) => (isLarge(cardSize) ? '1 1 0%;' : '0 0 125px;')}\n    overflow: hidden;\n    transition: flex-basis 0.25s ease-in-out 0s;\n`\nMedia.defaultProps = {\n  placeholderBg: `rgb(225, 232, 235)`,\n}\n\nexport const Video = styled('video')`\nwidth:100%;\ndisplay: block;\nheight: 100%;\n    position: relative;\n    flex: ${({ cardSize }) => (isLarge(cardSize) ? '1 1 0%;' : '0 0 125px;')}\n    overflow: hidden;\nobject-fit:cover\n`\n\nexport const ContentWrapper = styled('div')`\n  display: flex;\n  justify-content: space-around;\n  flex-direction: column;\n  flex: 1;\n  padding: 10px 15px;\n  min-width: 0;\n  box-sizing: border-box;\n  ${({ cardSize }) => isLarge(cardSize) && largeContentStyle};\n`\n\nexport const Header = styled('header')`\n  text-align: left;\n  font-size: 16px;\n  font-weight: bold;\n  margin: 0;\n  flex-grow: 1.2;\n\n  ${({ cardSize }) => (!isLarge(cardSize) ? smallDescriptionStyle : largeDescriptionStyle)};\n`\nexport const Content = styled('div')`\n  text-align: left;\n  font-size: 14px;\n  flex-grow: 1;\n  margin: auto 0;\n  line-height: 18px;\n\n  ${({ cardSize }) => (!isLarge(cardSize) ? smallDescriptionStyle : largeDescriptionStyle)};\n`\n\nexport const Footer = styled('footer')`\n  text-align: left;\n  font-size: 12px;\n  margin: 0;\n  flex-grow: 0;\n`\n\nexport const Card = styled('a')`\n  max-width: ${({ width }) => (width ? width : `100vw`)};\n  background-color: rgb(255, 255, 255);\n  color: rgb(24, 25, 25);\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  display: flex;\n  opacity: 1;\n  position: relative;\n  transition-duration: 0.35s;\n  transition-timing-function: ease-in-out;\n  flex-direction: ${({ cardSize }) => (isLarge(cardSize) ? 'column' : 'row')}\n    ${({ cardSize }) => (isLarge(cardSize) ? largeMediaStyle : smallMediaStyle)};\n\n  transition-property: background, border-color, height;\n  border-width: 1px;\n  border-style: solid;\n  border-color: rgb(225, 232, 237);\n  overflow: hidden;\n  text-decoration: none;\n  -webkit-tap-highlight-color: rgb(245, 248, 250);\n  cursor: pointer;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.08);\n  &:hover {\n    background: rgb(245, 248, 250);\n  }\n`\nCard.defaultProps = {\n  rel: 'noopener noreferrer',\n  target: '_blank',\n}\n","import * as React from 'react';\n\nimport styled, { css, keyframes } from 'styled-components';\n\n// Key Frames\nconst shimmerKeyFrame = keyframes`\n   0%{\n        background-position: 100% 80%;\n    }\n    100%{\n        background-position: 0 80%;\n    }\n`\nconst loadingStyle = css`\n  animation-duration: 1.4s;\n  animation-fill-mode: forwards;\n  animation-iteration-count: infinite;\n  animation-timing-function: linear;\n  animation-name: ${shimmerKeyFrame};\n  background: darkgray;\n  background: linear-gradient(90deg, #cacaca 25%, #e4e4e4 37%, #f7f6f6 63%);\n  background-size: 800px 100%;\n  color: transparent;\n  -webkit-line-clamp: 1;\n  border-radius: 10px;\n  width: ${({ loadingWidth }) => (loadingWidth ? `${100 / loadingWidth}%` : `100%`)};\n`\n\nconst UnstyledDescription = ({ loading, loadingWidth, maxLine, minLine, className, ...props}) => {\n    return (\n        <p {...props} className={className}>{...props.children}</p>\n    );\n}\n\nexport const Description = styled(UnstyledDescription)<{ loading: boolean }>`\n  &&& {\n    text-align: inherit;\n    font-weight: inherit;\n    font-family: inherit;\n    color: inherit;\n    margin: 0;\n    ${({ loading }) => loading && loadingStyle}\n  }\n`\n\nexport default Description;\n","const REGEX_AMAZON_URL = /https?:\\/\\/(.*amazon\\..*\\/.*|.*amzn\\..*\\/.*|.*a\\.co\\/.*)/i\nexport const isAmazonUrl = url => REGEX_AMAZON_URL.test(url)\n\nconst REGEX_YOUTUBE = /^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.?be)\\/.+$/gi\nexport const isYoutubeUrl = url => !!url.toString().match(REGEX_YOUTUBE)\n\nconst REGEX_INSTAGRAM = /(https?:\\/\\/www\\.)?instagram\\.com(\\/p\\/\\w+\\/?)/gi\nexport const isInstagramUrl = url => !!url.toString().match(REGEX_INSTAGRAM)\n\nconst REGEX_BOARDGAMEGEEK = /(https?:\\/\\/www\\.)?boardgamegeek\\.com(\\/boardgame\\/\\w+\\/\\w+\\/?)/gi\nexport const isBoardGameGeekUrl = url => !!url.toString().match(REGEX_BOARDGAMEGEEK)\n\nconst REGEX_TWITTER = /(https?:\\/\\/(www)?\\.?)?twitter\\.com\\/.+/gi\nexport const isTwitterUrl = url => !!url.toString().match(REGEX_TWITTER)\n\nexport const isEmpty = (value: any) => {\n  let isEmptyObject = function(a) {\n    if (typeof a.length === 'undefined') {\n      // it's an Object, not an Array\n      let hasNonempty = Object.keys(a).some(function nonEmpty(element) {\n        return !isEmpty(a[element])\n      })\n      return hasNonempty ? false : isEmptyObject(Object.keys(a))\n    }\n\n    return !a.some(function nonEmpty(element) {\n      // check if array is really not empty as JS thinks\n      return !isEmpty(element) // at least one element should be non-empty\n    })\n  }\n  return (\n    value == false ||\n    typeof value === 'undefined' ||\n    value == null ||\n    (typeof value === 'object' && isEmptyObject(value))\n  )\n}\n\nexport const isAudio = (mimeType: string) => mimeType.startsWith('audio/')\nexport const isVideo = (mimeType: string) => mimeType.startsWith('video/')\nexport const isImage = (mimeType: string) => mimeType.startsWith('image/')\n\n// Basic Scrap Helpers\nexport const getTitleOfDoc = (htmlDoc: any) => {\n  const titleEl = htmlDoc.querySelector('title')\n  if (!titleEl) {\n    return null\n  }\n  return titleEl.innerText\n}\n\nexport const getAttrOfDocElement = (htmlDoc: any, query: string, attr: string) => {\n  const el = htmlDoc.querySelector(query)\n  if (!el) {\n    return null\n  }\n  return el.getAttribute(attr)\n}\n\nexport const getYoutTubeVideoId = (url: string) => {\n  const parsed = url.match(/^.*((m\\.)?youtu\\.be\\/|vi?\\/|u\\/\\w\\/|embed\\/|\\?vi?=|\\&vi?=)([^#\\&\\?]*).*/)\n\n  if (parsed && parsed[3]) {\n    return parsed[3]\n  } else {\n    return null\n  }\n}\n\nexport const getInstagramVideo = (htmlDoc: any) => {\n  const videoLinkMatcher = /(?:\"video_url\":\")(.*?)(?:\")/g\n  if (videoLinkMatcher.test(htmlDoc)) {\n    const videoMatches = videoLinkMatcher.exec(htmlDoc)\n    if (videoMatches && videoMatches.length !== 0) {\n      return videoMatches[0].split('\":\"')[1].replace('\"', '')\n    }\n  }\n  return null\n}\n\nexport const fixRelativeUrls = (baseUrl: string, itemUrl: string) => {\n  const normalizedUrl = itemUrl.toLocaleLowerCase()\n  if (normalizedUrl.startsWith('http://') || normalizedUrl.startsWith('https://')) {\n    return itemUrl\n  }\n  return new URL(itemUrl, baseUrl).href\n}\n\nexport const getBaseUrl = (htmlDoc: any, url: string) => getAttrOfDocElement(htmlDoc, 'base', 'href') || new URL(url).origin\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => {\n  return {\n    title: url.substring(url.lastIndexOf('/') + 1),\n    description: url,\n    image: [],\n    video: [url, defaultMedia].filter(i => !isEmpty(i)),\n    url: url,\n    type: ReactTinyLinkType.TYPE_VIDEO,\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => {\n  return {\n    title: url.substring(url.lastIndexOf('/') + 1),\n    description: url.substring(url.lastIndexOf('/') + 1),\n    url: url,\n    image: [defaultMedia].filter(i => !isEmpty(i)),\n    video: [],\n    type: ReactTinyLinkType.TYPE_AUDIO,\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, defaultMedia: string[]) => ({\n  title: url.substring(url.lastIndexOf('/') + 1),\n  description: url.substring(url.lastIndexOf('/') + 1),\n  url: url,\n  video: [],\n  image: [url, defaultMedia].filter(i => !isEmpty(i)),\n  type: ReactTinyLinkType.TYPE_IMAGE,\n})\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getYoutTubeVideoId } from '../utils'\n\nconst titleRegex = /\"title\":\"(.+?)\"/g\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  const id = getYoutTubeVideoId(url)\n  const image = [\n    `https://img.youtube.com/vi/${id}/0.jpg`,\n    `https://img.youtube.com/vi/${id}/1.jpg`,\n    `https://img.youtube.com/vi/${id}/2.jpg`,\n    `https://img.youtube.com/vi/${id}/3.jpg`,\n  ]\n  try {\n    const { title } = JSON.parse(\n      `{${\n      htmlDoc\n        .querySelector('html')\n        .innerHTML.toString()\n        .match(titleRegex)[0]\n      }}`,\n    )\n    return {\n      title: title,\n      url: url,\n      description: url,\n      type: ReactTinyLinkType.TYPE_YOUTUBE,\n      video: [],\n      image: image.filter(i => !isEmpty(i)),\n    }\n  } catch (error) {\n    return {\n      title: htmlDoc.querySelector('title').innerText,\n      url: url,\n      description: url,\n      type: ReactTinyLinkType.TYPE_YOUTUBE,\n      video: [],\n      image: !defaultMedia ? image.filter(i => !isEmpty(i)) : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    }\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, '.a-dynamic-image', 'data-old-hires'),\n    getAttrOfDocElement(htmlDoc, '.a-dynamic-image', 'src'),\n  ]\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    type: ReactTinyLinkType.TYPE_AMAZON, // MIME Type\n    publisher: ['Amazon'],\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:logo\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[itemprop=\"logo\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'img[itemprop=\"logo\"]', 'src'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image']\", 'content'),\n    getAttrOfDocElement(htmlDoc, 'img[class*=\"logo\" i]', 'src'),\n    getAttrOfDocElement(htmlDoc, 'img[src*=\"logo\" i]', 'src'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image:secure_url\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image:url\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[property=\"og:image\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image:src\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image\"]', 'content'),\n    getAttrOfDocElement(htmlDoc, 'meta[itemprop=\"image\"]', 'content'),\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_DEFAULT, // MIME Type\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty } from '../utils'\n\nexport default async (url: string, data, defaultMedia) => {\n  const scrappedData = JSON.parse(data)\n\n  return {\n    title: scrappedData.graphql.shortcode_media.accessibility_caption,\n    content: url,\n    url: url,\n    description: scrappedData.title,\n    video: null,\n    image: !defaultMedia\n      ? [scrappedData.graphql.shortcode_media.display_url]\n      : [scrappedData.graphql.shortcode_media.display_url, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_IMAGE, // MIME Type\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getTitleOfDoc, getAttrOfDocElement, fixRelativeUrls } from '../utils'\n\nexport default async (url, htmlDoc, defaultMedia) => {\n  let baseUrl = getAttrOfDocElement(htmlDoc, 'base', 'href')\n  if (!baseUrl) {\n    baseUrl = url\n  }\n  const image = [\n    getAttrOfDocElement(htmlDoc, 'meta[name=\"twitter:image:src\"]', 'content')\n  ]\n  return {\n    title: getTitleOfDoc(htmlDoc),\n    content: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    image: !defaultMedia\n      ? image.filter(i => !isEmpty(i)).map(i => fixRelativeUrls(baseUrl, i))\n      : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    description: getAttrOfDocElement(htmlDoc, \"meta[name='description']\", 'content'),\n    video: [],\n    type: ReactTinyLinkType.TYPE_BOARDGAMEGEEK, // MIME Type\n    publisher: ['BoardGameGeek'],\n  }\n}\n","import { ReactTinyLinkType } from '../../ReactTinyLinkTypes'\nimport { isEmpty, getAttrOfDocElement, fixRelativeUrls, getBaseUrl } from '../utils'\n\nexport default async (url, data, htmlDoc, defaultMedia) => {\n  const scrappedData = JSON.parse(data)\n  const htmlElement = document.createElement(`html`)\n  htmlElement.innerHTML = scrappedData.html\n\n  let baseUrl = getBaseUrl(htmlDoc, url)\n\n  const image = [\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image']\", 'content'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:image:user_generated']\", 'content'),\n    'https://help.twitter.com/content/dam/help-twitter/twitter-logo.png',\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  const video = [\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:video:url']\", 'content'),\n    getAttrOfDocElement(htmlDoc, \"meta[property='og:video:secure_url']\", 'content'),\n  ]\n    .filter(i => !isEmpty(i))\n    .map(i => fixRelativeUrls(baseUrl, i))\n\n  return {\n    title: htmlElement.querySelector('p').textContent,\n    description: scrappedData.author_name,\n    url: getAttrOfDocElement(htmlDoc, \"meta[property='og:url']\", 'content'),\n    video: video,\n    image: !defaultMedia ? image : [...image, defaultMedia].filter(i => !isEmpty(i)),\n    type: ReactTinyLinkType.TYPE_TWITTER, // MIME Type\n    publisher: ['Twitter'],\n  }\n}\n","import {\n  isVideo,\n  isAudio,\n  isImage,\n  isYoutubeUrl,\n  isAmazonUrl,\n  isEmpty,\n  isInstagramUrl,\n  isBoardGameGeekUrl,\n  isTwitterUrl,\n} from './utils'\nimport ScrapVideo from './Video/ScrapVideo'\nimport ScrapAudio from './Audio/ScrapAudio'\nimport ScrapImage from './Image/ScrapImage'\nimport ScrapYoutube from './Youtube/ScrapYoutube'\nimport ScrapAmazon from './Amazon/ScrapAmazon'\nimport ScrapDefault from './Default/ScrapDefault'\nimport ScrapInstagram from './Instagram/ScrapInstagram'\nimport ScrapBoardGameGeek from './BoardGameGeek/ScrapBoardGameGeek'\nimport ScrapTwitter from './Twitter/ScrapTwitter'\n\nexport default async (url: string, httpClient, defaultMedia: string[]) => {\n  if (!isEmpty(url)) {\n    const response = await httpClient\n    const mimeType = response.headers.get('content-type')\n    const data = await response.text()\n    const htmlDoc = new DOMParser().parseFromString(data, 'text/html')\n    if (isVideo(mimeType)) {\n      return await ScrapVideo(url, defaultMedia)\n    } else if (isAudio(mimeType)) {\n      return await ScrapAudio(url, defaultMedia)\n    } else if (isImage(mimeType)) {\n      return await ScrapImage(url, defaultMedia)\n    } else if (isInstagramUrl(url)) {\n      return await ScrapInstagram(url, data, defaultMedia)\n    } else if (isYoutubeUrl(url)) {\n      return await ScrapYoutube(url, htmlDoc, defaultMedia)\n    } else if (isAmazonUrl(url)) {\n      return await ScrapAmazon(url, htmlDoc, defaultMedia)\n    } else if (isBoardGameGeekUrl(url)) {\n      return await ScrapBoardGameGeek(url, htmlDoc, defaultMedia)\n    } else if (isTwitterUrl(url)) {\n      return await ScrapTwitter(url, data, htmlDoc, defaultMedia)\n    } else {\n      return await ScrapDefault(url, htmlDoc, defaultMedia)\n    }\n  }\n}\n","import * as React from 'react'\nimport { Media, Video } from './Card'\nimport { ReactTinyLinkType } from '../ReactTinyLinkTypes'\nimport { isValidImageURL, isValidVideoURL, findFirstSecureUrl } from '../utils'\n\nconst ImageWrapper = ({ data, secureImageUrl, loadSecureUrl }) => {\n  if (loadSecureUrl && !secureImageUrl) return null\n  const imageUrl = data.image && ((loadSecureUrl && secureImageUrl) ? secureImageUrl : data.image[0])\n\n  if (!imageUrl) {\n    return null\n  }\n\n  return <img\n    style={{ display: `none` }}\n    src={imageUrl}\n    onError={(e: any) => {\n      e.target.parentElement.style.filter = ''\n    }}\n    onLoad={(e: any) => {\n      e.target.parentElement.style.filter = ''\n    }}\n  />\n\n}\n\nconst VideoWrapper = ({ data, secureVideoUrl, loadSecureUrl, autoPlay }) => {\n  if (loadSecureUrl && !secureVideoUrl) return null\n  const videoUrl = data.video && ((loadSecureUrl && secureVideoUrl) ? secureVideoUrl : data.video[0])\n\n  if (!videoUrl) {\n    return null\n  }\n\n  return <Video\n    muted\n    onCanPlayThrough={e => {\n      let video = e.target\n      setTimeout(() => {\n        video.pause()\n      }, 1000)\n    }}\n    autoPlay={autoPlay}\n    controls\n  >\n    <source src={`${videoUrl}#t=0.1`}></source>\n  </Video>\n\n}\n\n\nconst CardMedia = ({ data, cardSize, autoPlay, loadSecureUrl }) => {\n  const secureImageUrl = data.image && findFirstSecureUrl(data.image, isValidImageURL)\n  const secureVideoUrl = data.video && findFirstSecureUrl(data.video, isValidVideoURL)\n\n  return (\n    <>\n      {data.type !== ReactTinyLinkType.TYPE_VIDEO && (\n        <Media\n          className=\"react_tinylink_card_media\"\n          cardSize={cardSize}\n          src={data.image && (secureImageUrl ? secureImageUrl : data.image[0])}\n          type={data.type}\n          style={{ WebkitFilter: 'blur(10px)', filter: 'blur(10px)' }}\n        >\n          <ImageWrapper data={data} secureImageUrl={secureImageUrl} loadSecureUrl={loadSecureUrl} />\n        </Media>\n      )}\n      {data.type && data.type === ReactTinyLinkType.TYPE_VIDEO && (\n        <Media\n          className=\"react_tinylink_card_media\"\n          cardSize={cardSize}\n          src={data.video && (secureVideoUrl ? secureVideoUrl : data.video[0])}\n          type={data.type}\n        >\n          <VideoWrapper data={data} secureVideoUrl={secureVideoUrl} autoPlay={autoPlay} loadSecureUrl={loadSecureUrl} />\n        </Media>\n      )}\n    </>\n  )\n}\n\nexport default CardMedia\n","import { useState, useEffect } from 'react'\n\n// Helpers\nimport ScraperWraper from './rules'\nimport { makeCancelable } from './utils'\n\n// Types\nimport { IReactTinyLinkData } from './ReactTinyLinkTypes'\nimport { isInstagramUrl, isTwitterUrl } from './rules/utils'\n\n/** current state of the fetch */\nexport interface IState<T, E> {\n  /**\n   * The respones to the request. Undefined if the request not done or returned\n   * an error.\n   */\n  response: T | undefined\n\n  /** Loading status. `true` if loading, `false` otherwise. */\n  loading: boolean\n\n  /**\n   * Error status. Undefined if the request returned a valid response or is\n   * loading.\n   */\n  error: E | undefined\n}\n\n/** array composed of:\n * 1. The respones to the request. Undefined if the request not done or returned\n *    an error.\n * 2. The loading status. `true` if loading, `false` otherwise.\n * 3. Ther error status. Undefined if the request returned a valid response or is\n *    loading.\n */\nexport type ResponseState<T, E> = [T | undefined, boolean, E | undefined]\n\nexport type UseScraperConfig = {\n  url: string\n  proxyUrl?: string\n  requestHeaders?: Headers | string[][] | Record<string, string>\n  /** default medias passed to the `ScraperWraper` */\n  defaultMedias?: string[]\n  /**\n   * Permits to pass a default value. This will be the response's value\n   * during the loading and in case of error.\n   */\n  defaultValue?: IReactTinyLinkData\n  /** disables cache */\n  noCache?: boolean\n  // Hooks for the caller\n  /** Called when the fetch failed with the reason of the failure */\n  onError?: (error: Error) => void\n  /** Called when the fetch succeeded with the resulting data */\n  onSuccess?: (response: IReactTinyLinkData) => void\n}\n\ntype CacheMap = Map<string, IReactTinyLinkData>\n\nconst cache: CacheMap = new Map()\n\nexport function useScraper({\n  url,\n  proxyUrl = 'https://cors-anywhere.herokuapp.com',\n  defaultMedias = [],\n  defaultValue,\n  noCache,\n  onError,\n  onSuccess,\n  requestHeaders,\n}: UseScraperConfig): ResponseState<IReactTinyLinkData, Error> {\n  // Alias to IState\n  type State = IState<IReactTinyLinkData, Error>\n\n  // Setup the state\n  const [state, setState] = useState<State>({\n    response: defaultValue,\n    loading: true, // Avoid a re-render to set to true\n    error: undefined,\n  })\n\n  /** Does the fetch on mount. Ensure the cleanup in case of premature unmounting */\n  useEffect(() => {\n    // Permit to control if should set the state. Avoiding a memory leak\n    let isMounted: boolean = true\n\n    // Wraps the `ScraperWraper` to manage the hook's state\n    const doFetch = async (): Promise<IReactTinyLinkData> => {\n      const finalStateUpdate: Partial<State> = { loading: false, error: undefined }\n      let headers = requestHeaders\n\n      try {\n        // actual request to preview the link\n        let urlToCall = proxyUrl ? `${proxyUrl}/${url}` : url\n        if (isInstagramUrl(url)) {\n          const modifiedInstaUrl = `${url}?__a=1&max_id=endcursor`\n          urlToCall = modifiedInstaUrl\n        } else if (isTwitterUrl(url)) {\n          const modifiedInstaUrl = `https://publish.twitter.com/oembed?url=${url}`\n          urlToCall = proxyUrl ? `${proxyUrl}/${modifiedInstaUrl}` : modifiedInstaUrl\n        }\n\n        let data\n        if (!noCache && cache.has(urlToCall)) {\n          data = cache.get(urlToCall)\n        } else {\n          const client = fetch(urlToCall, { headers })\n          data = await ScraperWraper(url, client, defaultMedias)\n          cache.set(urlToCall, data)\n        }\n        finalStateUpdate.response = data\n\n        onSuccess && isMounted && onSuccess(data)\n        return data\n      } catch (err) {\n        finalStateUpdate.error = err\n        onError && isMounted && onError(err)\n\n        return err\n      } finally {\n        isMounted && setState(old => ({ ...old, ...finalStateUpdate }))\n      }\n    }\n\n    // Makes the request and wraps it so we can cancel it if needed\n    const cancelable = makeCancelable(doFetch());\n    // avoid throw errors on promise cancel, other errors should be catched inside doFetch function\n    cancelable.promise.catch(() => {});\n\n    // Returns a cleanup function which permits to avoid potential\n    // memory leaks and unnecessary network when the component is\n    // unmount.\n    return () => {\n      isMounted = false // Avoid all the state management\n      cancelable.cancel() // Cancel the request\n    }\n  }, [url, proxyUrl, noCache]) // Put no dependecy, does the fetch only once on mount\n\n  return [state.response, state.loading, state.error]\n}\n\n/** headers passed to the fetch request */\n","import * as React from 'react'\nimport { Card, ContentWrapper, Header, Content, Footer } from './components/Card'\nimport Description from './components/Description'\nimport { getHostname, noop, defaultData } from './utils'\nimport { IReactTinyLinkProps } from './ReactTinyLinkTypes'\nimport ScraperWraper from './rules'\nimport CardMedia from './components/CardMedia'\nimport { useScraper } from './useScraper'\n\nexport const useScrapper = useScraper\nexport const ScrapperWraper = ScraperWraper\nexport const ReactTinyLink: React.FC<IReactTinyLinkProps> = ({\n  cardSize = 'small',\n  maxLine = 2,\n  minLine = 1,\n  header = null,\n  description = null,\n  url = '',\n  width = '640px',\n  noCache = false,\n  proxyUrl = 'https://cors-anywhere.herokuapp.com',\n  showGraphic = true,\n  autoPlay = false,\n  defaultMedia = '',\n  loadSecureUrl = false,\n  onError = noop, // Permit to keep a constant reference\n  onSuccess = noop,\n  onClick = null,\n  requestHeaders = { 'x-requested-with': '' },\n}: IReactTinyLinkProps) => {\n  const defaultMedias = defaultMedia ? [defaultMedia] : []\n  const [data, loading] = useScraper({\n    url,\n    proxyUrl,\n    requestHeaders,\n    defaultMedias,\n    defaultValue: defaultData(url, defaultMedias),\n    noCache,\n    onError,\n    onSuccess,\n  })\n\n  return (\n    <Card\n      onClick={e => {\n        if (!onClick) return;\n        e.preventDefault()\n        onClick(e, data)\n      }}\n      className=\"react_tinylink_card\"\n      cardSize={cardSize}\n      href={url}\n      width={width}\n      isShownGraphic={showGraphic}\n    >\n      {showGraphic && (\n        <CardMedia autoPlay={autoPlay} cardSize={cardSize} data={data} loadSecureUrl={loadSecureUrl} />\n      )}\n      <ContentWrapper className=\"react_tinylink_card_content_wrapper\" cardSize={cardSize}>\n        <Header maxLine={maxLine} minLine={minLine} className=\"react_tinylink_card_content_header\">\n          <Description\n            loading={loading}\n            loadingWidth={2}\n            maxLine={maxLine}\n            minLine={minLine}\n            className=\"react_tinylink_card_content_header_description\"\n          >\n            {header ? header : data.title ? data.title : url}\n          </Description>\n        </Header>\n        <Content maxLine={maxLine} minLine={minLine} className=\"react_tinylink_card_content\" cardSize={cardSize}>\n          <Description loading={loading} loadingWidth={1} className=\"react_tinylink_card_content_description\">\n            {description ? description : data.description ? data.description : url}\n          </Description>\n        </Content>\n        <Footer className=\"react_tinylink_footer\">\n          <Description loading={loading} loadingWidth={1} className=\"react_tinylink_card_footer_description\">\n            {getHostname(url)}\n          </Description>\n        </Footer>\n      </ContentWrapper>\n    </Card>\n  )\n}\n"],"names":["css","styled","keyframes","React","useEffect"],"mappings":"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"}